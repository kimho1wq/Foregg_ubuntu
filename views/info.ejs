<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta http-equiv="X-UA-Compatible" content="ie=edge">
		<title>ForEgg - MY PAGE</title>

		<!-- CSS -->
		<link href="../css/bootstrap.min.css" rel="stylesheet">
		<link href="../css/product.css" rel="stylesheet">
	</head>
	<body class="d-flex vh-100 bg-light">
		<div class="container px-3 py-5 m-auto" style="max-width: 28rem;">
			<img class="mb-5" src="../img/cs256.png" alt="" width="96" height="96">
			<h3 class="mb-3 font-weight-normal">USER INFO</h3>
			
            <form action="/users/info" method="post" enctype="multipart/form-data">
				<hr class="my-4">
				<div class="form-group">
                    <p>프로필 사진 선택</p>
                    <input type="file" class="form-control-file" id="profile_picture" name="profile_picture">
                </div>
                <button type="submit" class="btn btn-primary btn-block">프로필 사진 수정하기</button>
			</form>
            
            <form action="/users/info/phone" method="post" id="phone-verification">
                <input type="hidden" class="form-control" id="phone-number-info" name="phone-number-info" value="<%=login.phone%>">
            </form>
            
            <form id="sign-in-form" action="#">
				<hr class="my-4">
				<div class="form-group">
                    <label for="phone-number">핸드폰 번호</label>
                    <input type="text" class="form-control" id="phone-number" name="phone-number">
                </div>
                <button type="submit" class="btn btn-primary btn-block" id="sign-in-button">인증번호 받기</button>
			</form>
            
            <form id="verification-code-form" action="#">
				<hr class="my-4">
				<div class="form-group">
                    <label for="verification-code">인증번호</label>
                    <input type="text" class="form-control" id="verification-code" name="verification-code">
                </div>
                <button type="submit" class="btn btn-primary btn-block" id="verify-code-button">확인</button>
			</form>
            <!--<form action="/users/info" method="post">
                <div class="form-group">
                    <label for="join_nickname">닉네임</label>
                    <input type="text" class="form-control" name="join_nickname" id="join_nickname" maxlength="18" required>
                </div>
                <hr class="my-4">
                <button type="submit" class="btn btn-primary btn-block">프로필 닉네임 수정하기</button>
			</form>-->
			<div class="mt-3 text-center small">
				<a class="mx-2 text-muted" href="/">홈으로</a>
			</div>
		</div>

		<!-- Bootstrap core JavaScript
		================================================== -->
		<!-- Placed at the end of the document so the pages load faster -->
		<script src="../js/jquery-3.3.1.min.js"></script>
		<script src="../js/bootstrap.bundle.min.js"></script>
		<script src="https://www.gstatic.com/firebasejs/5.7.3/firebase.js"></script>
        <script src="https://www.gstatic.com/firebasejs/5.5.2/firebase-app.js"></script>
        <script src="https://www.gstatic.com/firebasejs/5.5.2/firebase-auth.js"></script>
        <script>
            var config = {
                apiKey: "AIzaSyBK-JY3h8Hj4dH-qTJtTmmiew4zE8U9hC4",
                authDomain: "foregg-8e50f.firebaseapp.com",
                databaseURL: "https://foregg-8e50f.firebaseio.com",
                projectId: "foregg-8e50f",
                storageBucket: "foregg-8e50f.appspot.com",
                messagingSenderId: "530431911120"
            };
            firebase.initializeApp(config);
        </script>
        <script type="text/javascript">
            /**
            * Set up UI event listeners and registering Firebase auth listeners.
            */
            window.onload = function() {
                updateSignInButtonUI();
                updateSignInFormUI();
                //updateSignOutButtonUI();
                //updateSignedInUserStatusUI();
                updateVerificationCodeFormUI();
             
                // Event bindings.
                //document.getElementById('sign-out-button').addEventListener('click', onSignOutClick);
                document.getElementById('phone-number').addEventListener('keyup', updateSignInButtonUI);
                document.getElementById('phone-number').addEventListener('change', updateSignInButtonUI);
                document.getElementById('verification-code').addEventListener('keyup', updateVerifyCodeButtonUI);
                document.getElementById('verification-code').addEventListener('change', updateVerifyCodeButtonUI);
                document.getElementById('verification-code-form').addEventListener('submit', onVerifyCodeSubmit);
                //document.getElementById('cancel-verify-code-button').addEventListener('click', cancelVerification);
                
                // [START appVerifier]
                window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {
                    'size': 'invisible',
                    'callback': function(response) {
                        // reCAPTCHA solved, allow signInWithPhoneNumber.
                        onSignInSubmit();
                    }
                });
                // [END appVerifier]
                recaptchaVerifier.render().then(function(widgetId) {
                    window.recaptchaWidgetId = widgetId;
                    updateSignInButtonUI();
                });
            };
            /**
            * Function called when clicking the Login/Logout button.
            */
            function onSignInSubmit() {
                console.log("onSignInSubmit");
                if (isPhoneNumberValid()) {
                    window.signingIn = true;
                    updateSignInButtonUI();
                    var phoneNumber = getPhoneNumberFromUserInput();
                    var appVerifier = window.recaptchaVerifier;
                    firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)
                        .then(function (confirmationResult) {
                        // SMS sent. Prompt user to type the code from the message, then sign the
                        // user in with confirmationResult.confirm(code).
                        window.confirmationResult = confirmationResult;
                        window.signingIn = false;
                        updateSignInButtonUI();
                        updateVerificationCodeFormUI();
                        updateVerifyCodeButtonUI();
                        updateSignInFormUI();
                    }).catch(function (error) {
                        // Error; SMS not sent
                        console.error('Error during signInWithPhoneNumber', error);
                        window.alert('Error during signInWithPhoneNumber:\n\n'
                                     + error.code + '\n\n' + error.message);
                        window.signingIn = false;
                        updateSignInFormUI();
                        updateSignInButtonUI();
                    });
                } else {
                    window.alert('회원 정보의 번호와 일치하지 않습니다.');
                }
            }
            /**
            * Function called when clicking the "Verify Code" button.
            */
            function onVerifyCodeSubmit(e) {
                console.log("onVerifyCodeSubmit");
                e.preventDefault();
                if (!!getCodeFromUserInput()) {
                    window.verifyingCode = true;
                    updateVerifyCodeButtonUI();
                    var code = getCodeFromUserInput();
                    confirmationResult.confirm(code).then(function (result) {
                        // User signed in successfully.
                        window.verifyingCode = false;
                        window.confirmationResult = null;
                        updateVerificationCodeFormUI();
                        updateSignInFormUI();
                        document.getElementById('phone-verification').submit();
                    }).catch(function (error) {
                        // User couldn't sign in (bad verification code?)
                        console.error('Error while checking the verification code', error);
                        window.alert('Error while checking the verification code:\n\n'
                                     + error.code + '\n\n' + error.message);
                        window.verifyingCode = false;
                        updateSignInButtonUI();
                        updateVerifyCodeButtonUI();
                    });
                }
            }
            /**
            * Cancels the verification code input.
            */
            /*function cancelVerification(e) {
                console.log("cancelVerification");
                e.preventDefault();
                window.confirmationResult = null;
                updateVerificationCodeFormUI();
                updateSignInFormUI();
            }*/
            /**
            * Signs out the user when the sign-out button is clicked.
            */
            /*function onSignOutClick() {
                console.log("onSignOutClick");
                firebase.auth().signOut();
            }*/
            /**
            * Reads the verification code from the user input.
            */
            function getCodeFromUserInput() {
                console.log("getCodeFromUserInput");
                return document.getElementById('verification-code').value;
            }
            /**
            * Reads the phone number from the user input.
            */
            function getPhoneNumberFromUserInput() {
                console.log("getPhoneNumberFromUserInput");
                var rawValue = document.getElementById('phone-number').value;
                var str = '+82' + rawValue.substring(1,rawValue.length);
                console.log(str);
                return str; 
            }
            /**
            * Reads the phone number from the user info.
            */
            function getPhoneNumberFromUserInfo() {
                console.log("getPhoneNumberFromUserInfo");
                return document.getElementById('phone-number-info').value;
            }
            /**
            * Returns true if the phone number is valid.
            */
            function isPhoneNumberValid() {
                console.log("isPhoneNumberValid");
                //var pattern = /^\+[0-9\s\-\(\)]+$/;
                
                var phoneNumberInput = getPhoneNumberFromUserInput();
                var phoneNumberInfo = getPhoneNumberFromUserInfo();
                if(phoneNumberInput == phoneNumberInfo)
                    return true;
                else
                    return false;
                //return phoneNumber.search(pattern) !== -1;
            }
            /**
            * Re-initializes the ReCaptacha widget.
            */
            function resetReCaptcha() {
                console.log("resetReCaptcha");
                if (typeof grecaptcha !== 'undefined'
                    && typeof window.recaptchaWidgetId !== 'undefined') {
                    grecaptcha.reset(window.recaptchaWidgetId);
                }
            }
            /**
            * Updates the Sign-in button state depending on ReCAptcha and form values state.
            */
            function updateSignInButtonUI() {
                console.log("updateSignInButtonUI");
                document.getElementById('sign-in-button').disabled =
                    !isPhoneNumberValid()
                || !!window.signingIn;
            }
            /**
            * Updates the Verify-code button state depending on form values state.
            */
            function updateVerifyCodeButtonUI() {
                console.log("updateVerifyCodeButtonUI");
                document.getElementById('verify-code-button').disabled =
                    !!window.verifyingCode
                || !getCodeFromUserInput();
            }
            /**
            * Updates the state of the Sign-in form.
            */
            function updateSignInFormUI() {
                console.log("updateSignInFormUI");
                if (window.confirmationResult) {
                    document.getElementById('sign-in-form').style.display = 'none';
                } else {
                    resetReCaptcha();
                    document.getElementById('sign-in-form').style.display = 'block';
                }
            }
            /**
            * Updates the state of the Verify code form.
            */
            function updateVerificationCodeFormUI() {
                console.log("updateVerificationCodeFormUI");
                if (window.confirmationResult) {
                    document.getElementById('verification-code-form').style.display = 'block';
                } else {
                    document.getElementById('verification-code-form').style.display = 'none';
                }
            }
            /**
            * Updates the state of the Sign out button.
            */
            /*function updateSignOutButtonUI() {
                console.log("updateSignOutButtonUI");
                if (firebase.auth().currentUser) {
                    document.getElementById('sign-out-button').style.display = 'block';
                } else {
                    document.getElementById('sign-out-button').style.display = 'none';
                }
            }*/
            /**
            * Updates the Signed in user status panel.
            */
            /*function updateSignedInUserStatusUI() {
                console.log("updateSignedInUserStatusUI");
                var user = firebase.auth().currentUser;
                if (user) {
                    document.getElementById('sign-in-status').textContent = 'Signed in';
                    document.getElementById('account-details').textContent = JSON.stringify(user, null, '  ');
                } else {
                    document.getElementById('sign-in-status').textContent = 'Signed out';
                    document.getElementById('account-details').textContent = 'null';
                }
            }*/
        </script>
	</body>
</html>
